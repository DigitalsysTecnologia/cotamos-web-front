version: '2.1'
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: cotamos
      POSTGRES_PASSWORD: SEM49dd68C
    ports:
      - 5432:5432

  rabbit:
    image: rabbitmq:3-management
    hostname: rabbit
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

  cotamos-web-api:
    image: cotamos/private:web-api
    ports:
      - 3333:4444
    environment:
      NODE_ENV: "development"
      API_PORT: 4444
      DATABASE_USERNAME: "cotamos"
      DATABASE_PASSWORD: "SEM49dd68C"
      DATABASE_DB: "cotamos"
      DATABASE_HOST: "db"
      DATABASE_DIALECT: "postgres"
      APICLIENT_URL: "http://localhost:3333/api/v1/"
      RABBITMQ_URL: "amqp://rabbitmq:rabbitmq@rabbit:5672/"
      SLACK_URL: ""
    depends_on:
      - rabbit
      - db
    # Aguarda até que o postgres (porta 5432) e rabbit (porta 5672) estarem prontos e operantes
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 30; done;while !</dev/tcp/rabbit/5672; do sleep 30; done; npm run dev'

  integration-tokio-marine:
    image: cotamos/private:integration-tokio-marine
    environment:
      TOKIOMARINE_USERNAME: '22793056820'
      TOKIOMARINE_PASSWORD: '@SEM49dd68C@'
      RABBITMQ_CONNECTIONSTRING: 'amqp://rabbitmq:rabbitmq@rabbit:5672/'
    restart: always
    depends_on:
      - rabbit
    # Aguarda até que o postgres (porta 5432) e rabbit (porta 5672) estarem prontos e operantes
    command: bash -c 'while !</dev/tcp/rabbit/5672; do sleep 30; done; npm start'       
